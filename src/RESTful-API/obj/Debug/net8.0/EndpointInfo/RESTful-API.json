{
  "openapi": "3.0.1",
  "info": {
    "title": "ISIWebAPI",
    "description": "ISI JWT Web API - Ecommerce Store com documentacao OpenAPI JWT",
    "contact": {
      "name": "Integracao de Sistemas de Informacao 2024/25",
      "url": "https://www.ipca.pt",
      "email": "a23502@alunos.ipca.pt"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Address/getAllAddress": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "GET Request to fetch all Addresses on the database",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Address/getAddressById/{userId}": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "GET Request to fetch a specific address by id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Address/addAddressToUser/{userId}": {
      "post": {
        "tags": [
          "Address"
        ],
        "summary": "POST Request to post an address to an user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Address/deleteAddressFromUser/{userId}/{addressId}": {
      "delete": {
        "tags": [
          "Address"
        ],
        "summary": "DELETE Request to delete an address",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Address/updateAddressFromUser/{userId}/{addressId}": {
      "put": {
        "tags": [
          "Address"
        ],
        "summary": "PUT Request to update an address",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Cart/getCartFromUser/{userId}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "GET Request to get the user's current cart",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Cart/addToCart": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "POST Request to add a product to the user's cart",
        "requestBody": {
          "description": "Cart item details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Cart/removeFromCart/{cartId}": {
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "DELETE Request to remove a product from the user's cart",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "description": "The CartID of the item to remove",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/getAllCategory": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "GET all categories",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/getCategoryById/{categoryId}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "GET a specific category by CategoryID",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/addCategory": {
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "POST a new category",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/updateCategory/{categoryId}": {
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "PUT (Update) a category",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/deleteCategory/{categoryId}": {
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "DELETE a category by CategoryID",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Login/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "POST login request that verifies if the credentials are valid and generates a token for that user",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/getOrderFromUser/{userId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "GET Request to fetch all orders for a specific User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/getOrderById/{orderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "GET Request for a specific Order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/createOrder": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "POST Request that creates a whole order",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/deleteOrder/{orderId}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Delete order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/getPaymentById/{paymentId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "GET Request to get payment details by PaymentID",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "The ID of the payment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/createPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "POST Request to create a payment",
        "requestBody": {
          "description": "Payment details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/updatePaymentStatus/{paymentId}": {
      "put": {
        "tags": [
          "Payment"
        ],
        "summary": "PUT Request to update payment status",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "The ID of the payment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new status ID for the payment",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "text/json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/deletePayment/{paymentId}": {
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "DELETE Request to delete a payment",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "The ID of the payment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/StripePayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StripePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StripePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PaymentStripe/createPaymentIntentComplete": {
      "post": {
        "tags": [
          "PaymentStripe"
        ],
        "summary": "POST Request to create a payment intent with Stripe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentIntentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentIntentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentIntentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PaymentStripe/confirmPaymentIntent": {
      "post": {
        "tags": [
          "PaymentStripe"
        ],
        "summary": "POST Request that confirms payment intent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmPaymentIntentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmPaymentIntentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmPaymentIntentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PaymentStripe/PaymentStripe/webhook": {
      "post": {
        "tags": [
          "PaymentStripe"
        ],
        "summary": "POST request for Stripe Webhook",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/getAllProduct": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "GET Request to fetch all products",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/getProductbyid/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "GET Request to fetch a product by ID",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/addProduct": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "POST Request to create a new product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/updateProduct/{productId}": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "PUT Request to update a product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/deleteProduct/{productId}": {
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "DELETE Request to delete a product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SharedCart/shareCart/{userId}": {
      "post": {
        "tags": [
          "SharedCart"
        ],
        "summary": "POST Request to generate and share a cart",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user sharing their cart",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SharedCart/getSharedCart/{shareCode}": {
      "get": {
        "tags": [
          "SharedCart"
        ],
        "summary": "GET Request to retrieve a shared cart",
        "parameters": [
          {
            "name": "shareCode",
            "in": "path",
            "description": "The 5-digit share code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SharedCart/addSharedCart": {
      "post": {
        "tags": [
          "SharedCart"
        ],
        "summary": "POST Request to add a shared cart to the user's cart",
        "requestBody": {
          "description": "AddSharedCartRequest object containing UserID and ShareCode",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSharedCartRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSharedCartRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddSharedCartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/getAllUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "GET Request to fetch all Users",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/getUserById/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "GET Request for user by its specific ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/addUser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "POST Request to post a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/deleteUser/{userId}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "DELETE Request to delete certain user by id from the database",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/updateUser/{userId}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "PUT request to update an existing user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddSharedCartRequest": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "shareCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddToCartRequest": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "productID": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "isShared": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AddressModel": {
        "type": "object",
        "properties": {
          "addressID": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "streetAdditional": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "district": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "additionalNote": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryModel": {
        "type": "object",
        "properties": {
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfirmPaymentIntentRequest": {
        "type": "object",
        "properties": {
          "paymentIntentId": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrderRequest": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "statusID": {
            "type": "integer",
            "format": "int32"
          },
          "orderDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDetailRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePaymentIntentRequest": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethodID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LoginModel": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDetailRequest": {
        "type": "object",
        "properties": {
          "productID": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "productPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PaymentRequest": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "integer",
            "format": "int32"
          },
          "paymentStatusID": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodID": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductsModel": {
        "type": "object",
        "properties": {
          "productID": {
            "type": "integer",
            "format": "int32"
          },
          "categoryID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "StripePaymentRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer'[space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}